// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    // going to use inc16 to increment the value of the register
    Inc16(in=regOutput, out=regOutputInc); 
    Mux16(a=regOutput, b=regOutputInc, sel=inc, out=out1); // if inc is true, then out1 = regOutputInc, else out1 = regOutput
    Mux16(a=out1, b=in, sel=load, out=out2); // if load is true, then out2 = in, else out2 = out1
    Mux16(a=out2, b=false, sel=reset, out=regInput); // if reset is true, then regInput = false, else regInput = out2

    // load == load or inc or reset
    Or(a=load, b=inc, out=loadOrInc);
    Or(a=loadOrInc, b=reset, out=loadOrIncOrReset);

    // going to use a 16-bit register to store the value of the counter
    Register(in=regInput, load=loadOrIncOrReset, out=regOutput);

    // using or gate for output
    Or16(a=false, b=regOutput, out=out);
}
